name: Production Tag Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on: push
jobs:
  LintCommitMessages:
    # commitlint 校验以后不符合规范的commit无法提交, this job can be ignored
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
      - uses: wagoid/commitlint-github-action@v6

  Build_Pages:
    runs-on: ubuntu-latest
    needs: LintCommitMessages
    if: github.event_name == 'push' && startsWith(github.event.head_commit.message, 'feat:')
    steps:
      - uses: actions/checkout@v4
      - name: Detect package manager
        id: packageManagemer
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "install=install" >> $GITHUB_OUTPUT
            echo "build=build" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "install=ci" >> $GITHUB_OUTPUT
            echo "build=build" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Install dependencies
        run: ${{ steps.packageManagemer.outputs.manager }} ${{ steps.packageManagemer.outputs.install }}
      - name: Build
        run: ${{steps.packageManagemer.outputs.manager}} run ${{ steps.packageManagemer.outputs.build }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build
  # Deployment job
  Deployment:
    environment:
      name: github-pages
      # url: ${{ steps.Deployment.outputs.page_url }}
    permissions:
      id-token: write
      pages: write
    runs-on: ubuntu-latest
    needs: Build_Pages
    steps:
      - name: Deploy to GitHub Pages
        id: Deployment
        uses: actions/deploy-pages@v4
      # - name: Install Vercel CLI
      #   run: npm install --global vercel@latest
      # - name: Pull Vercel Environment Information
      # run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      # - name: Build Project Artifacts
      # run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      # - name: Deploy Project Artifacts to Vercel
      # run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
